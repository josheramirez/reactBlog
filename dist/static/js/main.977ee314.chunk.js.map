{"version":3,"sources":["components/dashboard/PostSummary.js","components/dashboard/PostsList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/layout/SingInLinks.js","store/actions/authActions.js","components/layout/SingOutLinks.js","components/layout/NavBar.js","components/projects/PostDetails.js","components/auth/SingIn.js","components/post/newPost.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/auth/SignUp.js","App.js","components/Principal.js","serviceWorker.js","reducers/userReducer.js","store/reducers/authReducer.js","reducers/postReducer.js","reducers/projectReducer.js","reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["PostSummary","post","to","id","className","titulo","author","moment","createdAt","toDate","calendar","PostsList","posts","map","key","Notifications","props","notifications","item","user","content","time","fromNow","Dashboard","this","auth","uid","Component","compose","connect","state","console","log","firestore","ordered","projects","firebase","firestoreConnect","collection","orderBy","limit","dispatch","signOut","getState","getFirebase","then","type","name","profile","toUpperCase","onClick","signOutLinks","ownProps","links","lastName","PostDetails","contenido","match","params","data","SingIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","error","CreateProject","createProject","history","push","cols","rows","project","getFirestore","authId","add","firstName","authorId","Date","SignUp","signUp","newUser","createUserWithEmailAndPassword","resp","doc","set","App","path","component","SignIn","exact","Boolean","window","location","hostname","initState","loading","userReducer","action","payload","authReducer","message","postReducer","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AuthIsLoaded","children","useSelector","isLoaded","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.977ee314.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nfunction PostSummary({post}) {\r\n\r\n    return (\r\n        <Link to={\"/post/\"+post.id}>\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{post.titulo}</span>\r\n                <p>Publicado por {post.author}</p>\r\n                <p>{moment(post.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default PostSummary\r\n","import React from 'react'\r\nimport PostSummary from './PostSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst PostsList=({posts})=>{\r\n    return(\r\n        <div className=\"project-list section\">\r\n            {posts && posts.map(post=>{\r\n                return(\r\n\r\n\r\n    <PostSummary post={post} key={post.id}/>\r\n\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default PostsList","import React from 'react'\r\nimport moment from 'moment'\r\n const Notifications = (props) => {\r\n    const {notifications}=props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul>\r\n                        {notifications && notifications.map(item => {\r\n                            return(\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text note-date\">{item.user}</span>\r\n                                    <span> {item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","//React, Redux & Firebase App Tutorial #24 - Logging Users Out\r\n\r\n\r\nimport React, {Component} from 'react'\r\nimport PostsList from './PostsList.js'\r\nimport Notifications from './Notifications.js'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        const {posts,auth,notifications}=this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <PostsList posts={posts}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    console.log(state)\r\n    return{\r\n        posts:state.firestore.ordered.projects,\r\n        auth:state.firebase.auth,\r\n        notifications:state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects', orderBy:['createdAt','desc']},\r\n        {collection:'notifications', limit:3, orderBy:['time','desc']}\r\n    ])\r\n)(Dashboard) ","import React, { Profiler } from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nfunction singInLinks(props) {\r\n    console.log(props);\r\n    const name=props.profile?props.profile.toUpperCase():null;\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>Nuevo Post</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/'>{name}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        signOut:()=> {dispatch(signOut())}\r\n    } \r\n };\r\nexport default connect(null, mapDispatchToProps)(singInLinks)\r\n","\r\nexport const signIn = (credentials) => {\r\n    // console.log(credentials)\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase=getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            console.log(\"aqui\")\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((error)=>{\r\n            console.log(\"error\",error)\r\n            dispatch({type: 'LOGIN_ERROR',error});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState,{getFirebase})=>{\r\n        const firebase=getFirebase();\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({ type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return(dispatch, getState, {getFirebase, getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch((error)=>{\r\n            dispatch({type: 'SIGNUP_ERROR', error})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nfunction signOutLinks(props) {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signin'>Sign In</NavLink></li>\r\n            <li><NavLink to='/signUp'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/'>NN</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default signOutLinks\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignInLinks from './SingInLinks'\r\nimport SignOutLinks from './SingOutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nfunction NavBar(props) {\r\n    const {profile}=props;\r\n    const links= props.auth.uid?<SignInLinks profile={profile.lastName}/>:<SignOutLinks/>\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Logp</Link>\r\n                {links}     \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n       auth: state.firebase.auth,\r\n       profile: state.firebase.profile\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(NavBar)\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\n\r\nclass PostDetails extends Component{\r\n    render(){\r\n\r\n        const {post}=this.props;\r\n         console.log(post)\r\n        // const post=this.props.post?(\r\n        //     <div className=\"post\">\r\n        //         <h4 className=\"center\">{this.props.post.titulo}</h4>\r\n        //         <p>{this.props.post.contenido}</p>\r\n        //     </div>\r\n        // ):(\r\n        //     <div className=\"center\">Cargando post...</div>\r\n        // )\r\n\r\n        // return (\r\n        //     <div className=\"container section project-details\">\r\n        //        {post}\r\n        //     </div>\r\n        // )\r\n\r\n        if(post){\r\n            return(\r\n                <div className=\"container section project-details\">\r\n                    <div className=\"card z-depth-0\">\r\n                        <div className=\"card-content\">\r\n                            <span className=\"card-title\">\r\n                                {post.titulo}\r\n                            </span>\r\n                            <p>{post.contenido}</p>\r\n                        </div>\r\n                        <div className=\"card-action gret lighten-4 grey-text\">\r\n                            <div>posted by JOSHE</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className=\"container center\">\r\n                    <p>Cargando Post....</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    } \r\n}\r\n\r\nconst mapStateToProps=(state,ownProps)=>{\r\n    const id=ownProps.match.params.id;\r\n    // console.log(state);\r\n    // console.log(id);\r\n    const projects=state.firestore.data.projects;\r\n    const project=projects ? projects[id]:null;\r\n\r\n    return {\r\n    //     post:state.posts.posts.find((post)=>{\r\n    //         return post.id===id\r\n    // })\r\n    post:project\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects'}\r\n    ])\r\n) (PostDetails)\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SingIn extends Component {\r\n    state={\r\n        email:'',\r\n        password:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n         const {authError}=this.props;\r\n         const {auth}=this.props;\r\n         if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Singn In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError?<p>{authError}</p>:null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n       console.log(state)\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        signIn: (credentials) => {\r\n            dispatch(signIn(credentials))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SingIn)\r\n","import React, { Component } from 'react'\r\n\r\nexport class newPost extends Component {\r\n    state={\r\n        titulo:'',\r\n        contenido:''\r\n    }\r\n    handleChange=(e)=>{\r\n        // console.log(e.target.id);\r\n\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Crear nuevo Post</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"titulo\">Titulo</label>\r\n                        <input type=\"text\" id=\"titulo\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"contenido\">Contenido</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"contenido\" onChange={this.handleChange}  cols=\"30\" rows=\"10\"></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Guardar</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default newPost\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\n\r\nexport class CreateProject extends Component {\r\n    state={\r\n        titulo:'',\r\n        contenido:''\r\n    }\r\n    handleChange=(e)=>{\r\n        // console.log(e.target.id);\r\n\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push(\"/\");\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Crear nuevo Post</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"titulo\">Titulo</label>\r\n                        <input type=\"text\" id=\"titulo\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"contenido\">Contenido</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"contenido\" onChange={this.handleChange}  cols=\"30\" rows=\"10\"></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Guardar</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        createProject: (project) => {\r\n            dispatch(createProject(project))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(CreateProject)\r\n\r\n","export const createProject = (project) =>{\r\n    console.log(project);\r\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firestore=getFirestore();\r\n        const profile=getState().firebase.profile;\r\n        const authId=getState().firebase.auth.uid;\r\n        \r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            author: profile.firstName+\" \"+profile.lastName,\r\n            authorId: authId,\r\n            createdAt:new Date()\r\n        }).then((project)=>{\r\n            dispatch({type:'CREATE_PROJECT',project});\r\n        }).catch((error)=>{\r\n            dispatch({type:'CREATE_PROJECT_ERROR',error});\r\n        })\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\n// import {signUpUser} from '../../store/actions/userActions'\r\nimport {signUp} from '../../store/actions/authActions'\r\nimport LoadingSpinner from '../spinner/loadingSpinner'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// const SingUp =({isLoading,signup}) => {\r\nclass SignUp extends Component{\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n  \r\n    //const handleChange=(e)=>{\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    //const handleSubmit=(e)=>{\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        // let data={email:e.target.email.value,password:e.target.password.value};\r\n        // signup(data);\r\n        this.props.signUp(this.state);\r\n    }\r\n    render(){\r\n        const {auth, authError}=this.props;\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n        console.log(this.props);\r\n        return (\r\n             <div className=\"container\">\r\n                {/* {isLoading != false ? <LoadingSpinner/> : */}\r\n                 <form onSubmit={this.handleSubmit} className=\"white\">\r\n                     <h5 className=\"grey-text text-darken-3\">Singn Up</h5>\r\n                     <div className=\"input-field\">\r\n                         <label htmlFor=\"email\">Email</label>\r\n                         <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                     </div>\r\n                     <div className=\"input-field\">\r\n                         <label htmlFor=\"password\">Password</label>\r\n                         <input type=\"text\" id=\"password\" onChange={this.handleChange}/>\r\n                     </div>\r\n                     <div className=\"input-field\">\r\n                         <label htmlFor=\"firstName\">First Name</label>\r\n                         <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                     </div>\r\n                     <div className=\"input-field\">\r\n                         <label htmlFor=\"lastName\">Last Name</label>\r\n                         <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                     </div>\r\n                     <div className=\"input-field\">\r\n                         <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                         <div className=\"red-text center\">\r\n                            {authError?<p>{authError}</p>:null }\r\n                        </div>\r\n                     </div>\r\n                 </form>\r\n                {/* } */}\r\n            </div>\r\n        )\r\n    }\r\n    }\r\nconst mapStateToProps=(state)=>{\r\n    // console.log(state);\r\n    return {\r\n        // isLoading: state.user.loading\r\n        auth: state.firebase.auth,\r\n        authError:state.auth.authError\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        // signup: data =>dispatch(signUpUser(data))\r\n        signUp: (newUser)=>dispatch(signUp(newUser))\r\n    };\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React, {Component} from 'react';\r\n\r\nimport './App.css';\r\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport { render } from '@testing-library/react';\r\nimport NavBar from './components/layout/NavBar'\r\n\r\nimport PostDetails from './components/projects/PostDetails'\r\nimport SignIn from './components/auth/SingIn'\r\nimport newPost from './components/post/newPost'\r\nimport createProject from './components/projects/CreateProject'\r\nimport SignUp from './components/auth/SignUp'\r\nimport Principal from './components/Principal'\r\n\r\nclass App extends Component{\r\n  render(){\r\n    return (\r\n      <BrowserRouter>    \r\n        <div className=\"App\">\r\n        <NavBar/>\r\n        <Switch>\r\n        <Route path='/signup' component={SignUp}/>\r\n        <Route path='/signin' component={SignIn}/>\r\n        <Route path='/post/:id' component={PostDetails}/>\r\n          <Route exact path='/' component={Dashboard}/>\r\n          <Route path='/create' component={createProject}/>\r\n          {/* <Route path='/create' component={newPost}/>\r\n          \r\n          <Route path='/singin' component={SingIn}/> */}\r\n        </Switch>\r\n       </div>\r\n      </BrowserRouter>\r\n        // <div className=\"container p-4\">\r\n        //   <div className=\"\">\r\n        //   {/* <Principal/> */}\r\n        //     <SingUp/>\r\n        //   </div>\r\n        // </div>\r\n\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","import React, {Component} from 'react'\r\n\r\n\r\nclass Principal extends Component{\r\n    render(){\r\n        // const {posts}=this.props;\r\n        // console.log(posts)\r\n        return (\r\n                    <form className=\"card card-body\">\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-text bg-light\">\r\n                                <i className=\"material-icons\">sports_esports</i>\r\n                            </div>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                placeholder=\"http://algo.com\"\r\n                                name=\"url\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Principal;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\nconst initState={\r\n    loading:false,\r\n    authError:null\r\n}\r\n\r\nconst userReducer = (state=initState, action) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            };\r\n        case \"STOP_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading:false\r\n            };\r\n        case \"AUTHERROR\":\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                authError: action.payload\r\n            }\r\n        default:\r\n           return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;\r\n","const initState={\r\n    authError:null\r\n}\r\n\r\nconst authReducer=(state=initState, action)=>{\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError:action.error.message\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('logout success');\r\n            return state\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError:action.error.message\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default  authReducer\r\n\r\n","const initState={\r\n    posts:[{\r\n        id:'001',titulo:'post numero 1',contenido:'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nemo, error ratione eius blanditiis officiis quam tempore voluptate nulla asperiores. Adipisci eos beatae est placeat deleniti nemo reprehenderit vitae sequi veniam.'\r\n    }]\r\n}\r\n\r\nconst postReducer=(state=initState,action)=>{\r\n    return state;\r\n}\r\n\r\nexport default postReducer;","const initState={\r\n    posts:[{\r\n        id:'001',titulo:'post numero 1',contenido:'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nemo, error ratione eius blanditiis officiis quam tempore voluptate nulla asperiores. Adipisci eos beatae est placeat deleniti nemo reprehenderit vitae sequi veniam.'\r\n    }]\r\n}\r\n\r\n\r\nconst projectReducer = (state=initState, action) => {\r\n    switch (action.type) {\r\n        case \"CREATE_PROJECT\":\r\n            console.log('creando projecto', action.project)\r\n            return state;\r\n        case \"CREATE_PROJECT_ERROR\":\r\n            console.log('creando projecto error', action.error)\r\n            return state;\r\n        case \"AUTHERROR\":\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                authError: action.payload\r\n            }\r\n        default:\r\n           return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;\r\n","\r\nimport userReducer from './userReducer'\r\nimport authReducer from '../store/reducers/authReducer'\r\nimport postReducer from './postReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer=combineReducers({\r\n    user:userReducer,\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    posts:postReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCeXELhX9B0GVulwER0cE2Mm35qk5B3E2k\",\r\n  authDomain: \"reactblog-c2913.firebaseapp.com\",\r\n  databaseURL: \"https://reactblog-c2913.firebaseio.com\",\r\n  projectId: \"reactblog-c2913\",\r\n  storageBucket: \"reactblog-c2913.appspot.com\",\r\n  messagingSenderId: \"526135566440\",\r\n  appId: \"1:526135566440:web:8157ad7178e5283ffd1bdd\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.firestore().settings({timestampInSnapshot:true});\r\nexport default firebase;\r\n\r\n// export const auth=firebase.auth();\r\n// export const storage=firebase.storage();\r\n// export const db=firebase.firestore();\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nimport {Provider, useSelector} from 'react-redux';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\nimport {reduxFirestore,getFirestore,createFirestoreInstance} from 'redux-firestore';\r\nimport {ReactReduxFirebaseProvider,getFirebase,siLoaded} from 'react-redux-firebase';\r\n\r\n\r\nimport {createStore,applyMiddleware,compose,combineReducers} from 'redux';\r\nimport fbConfig from './config/fbConfig'\r\nimport firebase from \"firebase/app\";\r\n// import 'firebase/auth'\r\nimport { isLoaded  } from 'react-redux-firebase';\r\n\r\n\r\n// import \"bootswatch/dist/superhero/bootstrap.min.css\"; \r\n// import \"bootswatch/dist/sketchy/bootstrap.min.css\";\r\n\r\n// const store=createStore(rootReducer,applyMiddleware(thunk,logger));\r\n\r\nfunction AuthIsLoaded({ children }) {\r\n  const auth = useSelector(state => state.firebase.auth)\r\n  if (!isLoaded(auth)) return <div></div>;\r\n  return children\r\n}\r\n\r\nconst store=createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\r\n    reduxFirestore(firebase,fbConfig)\r\n  )\r\n)\r\n\r\nconst rrfConfig = {\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true\r\n}\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  // config: fbConfig,\r\n  config: rrfConfig, fbConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance,\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n   <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <AuthIsLoaded>\r\n        <App />\r\n      </AuthIsLoaded>\r\n   </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n      // <Provider store={store}>\r\n      //   <React.StrictMode>\r\n      //     <App />\r\n      //   </React.StrictMode>\r\n      // </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}